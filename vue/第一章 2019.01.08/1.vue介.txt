1. 为什么要用vue
	1.1.1企业使用vue为了提高项目的开发效率
	1.1.2源生js（兼容性比较，开发慢）>jq这些的类库（兼容性有了很大提高，渲染dom元素复杂）>前端模板引擎（涉及浏览器的重绘重排，效率低下）>vue,angular(提高效率，减少不必要的dom操作，提高渲染效率，通过双向数据绑定在前端程序中程序猿只需要关心数据的业务逻辑，不再关心dom是如何渲染的)
2.框架和库的区别
	2.1.1框架：框架对项目的入侵比较大，项目如果到后期需要更换框架，就需要重新架构整个项目
	2.1.2库：对项目入的入侵性比较小，如果实际使用过程中如果发现库不符合需求，可以随时更换库
3.mvc和mvvm的区别
	3.1.1mvc是后端分层开发概念（m model处理数据的crud  v 视图层 前端页面 c业务逻辑层）
	3.1.2mvvm是前端视图层的概念（app.js一切的请求都i要先进入到这里进行处理（app.js并没有路由分发的功能需要调用router.js模块））（router.js(路由分发处理模块。只负责路由分发，不负责业务逻辑处理，若果涉及到业务逻辑处理只能调用controller模块进行业务逻辑处理)）（controller业务逻辑处理层（分装了一些具体业务逻辑处理的代码，也是为了保证职能单一，只负责业务逻辑处理若果涉及到CRUD则需要调用Model层））（Model层职能呢个单一只负责操作数据库）
	3.1.3CRUD（c：creat r：read u：update d：delete）
	3.1.4view 每当用户操作了界面，如果需要进行业务的处理，都会通过网络请求，去请求后端的服务器，就会被app.js监听
	3.1.5mvvm把每个页面分成了m，v，vm层；vm是mvvm的思想核心，因为vm是m和v之间的调度者；m（保存每个页面的单独数据）v（就是每个页面中的html结构）vm（他是一个调度着分割了m和v，每当v层想要获取保存数据的时候都要经过vm层）
	3.1.6code/lib/vue的基本代码.html形象诠释诠释mvvm